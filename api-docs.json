{
    "swagger": "2.0",
    "info": {
      "title": "Abayati APIs",
      "description": "API documentation for Abayati",
      "version": "1.0.0"
    },
    "host": "abayatii-backend.onrender.com",
    "basePath": "/",
    "schemes": ["https"],
    "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "description": "Enter your token in the format: Bearer <your-token> ",
      "in": "header"
    }
  },
  "security": [
  {
    "BearerAuth": []
  }
],
    "tags": [
      {
          "name": "User",
          "description": "All User Operations"
      },
      {
        "name": "Category",
        "description": "All Category Operations"
    },
      {
        "name": "Product",
        "description": "All Product Operations"
    },
    {
      "name": "Search",
      "description": "Search products"
  },
  {
    "name": "Store",
    "description": "Store Operations"
},
  {
    "name": "Measurements",
    "description": "Get AI measurements by pictures!"
}, {
  "name": "Virtual TryOn",
  "description": "Tryon different products!"
},
    {
      "name": "Order",
      "description": "Order Operations"
  },
  {
    "name": "Payments",
    "description": "Payments Operations"
}
  ]
,
    "paths": {
      "/register": {
        "post": {
            "tags": [
                "User"
              ],
          "summary": "Register a new user",
          "parameters": [
            {
                "name": "username",
                "in": "formData",
                "required": true
              },
              {
                  "name": "email",
                  "in": "formData",
                  "required": true
                },
                {
                  "name": "password",
                  "in": "formData",
                  "required": true
                }
          ],
          "responses": {
            "200": { "description": "User registered successfully" },
            "409": { "description": "Email already exists" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/login": {
        "post": {
          "tags": [
                "User"
              ],
          "summary": "Login user",
          "parameters": [
            {
              "name": "email",
              "in": "formData",
              "required": true
            },
            {
              "name": "password",
              "in": "formData",
              "required": true
            }
          ],
          "responses": {
            "200": { "description": "Login successful" },
            "404": { "description": "Invalid email or password" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/user": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get user by Token",
      
          "parameters": [
          ],
          "responses": {
            "200": { "description": "User data retrieved successfully" },
            "404": { "description": "User not found" },
            "500": { "description": "Internal server error" }
          }
        }
      },

      "/cart": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get the cart of the logged in user",
      
          "parameters": [
          ],
          "responses": {
            "200": { "description": "Cart retrieved successfully" },
            "404": { "description": "Cart not found" },
            "500": { "description": "Internal server error" }
          }
        }
      },

      "/addToCart": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Add product to cart",
          "parameters": [
            {
              "name": "userId",
              "in": "formData",
              "required": true
            },
            {
                "name": "productId",
                "in": "formData",
                "required": true
              },
              {
                "name": "quantity",
                "in": "formData",
                "required": true
              }
          ],
          "responses": {
            "200": { "description": "Added to cart successfully" },
            "404": { "description": "User or product not found" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/removeFromCart": {
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Remove product from cart",
          "parameters": [
            {
              "name": "userId",
              "in": "formData",
              "required": true
            },
            {
                "name": "productId",
                "in": "formData",
                "required": true
              }
          ],
          "responses": {
            "200": { "description": "Removed from cart successfully" },
            "400": { "description": "Product not in cart" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/wishlist": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get wishlist of the logged in user",
      
          "parameters": [
          ],
          "responses": {
            "200": { "description": "Wishlist retrieved successfully" },
            "404": { "description": "Wishlist not found" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/addToWishlist": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Add product to wishlist",
          "parameters": [
            {
              "name": "userId",
              "in": "formData",
              "required": true
            },
            {
                "name": "productId",
                "in": "formData",
                "required": true
              }
          ],
          "responses": {
            "200": { "description": "Added to wishlist successfully" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/removeFromWishlist": {
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Remove product from wishlist",
          "parameters": [
            {
              "name": "userId",
              "in": "formData",
              "required": true
            },
            {
                "name": "productId",
                "in": "formData",
                "required": true
              }
          ],
          "responses": {
            "200": { "description": "Removed from wishlist successfully" },
            "400": { "description": "Product not in wishlist" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/product/{id}": {
        "get": {
            "tags": [
                "Product"
              ],
          "summary": "Get product by ID ",
          "parameters": [
            {
                "name": "id",
                "in": "path",
                "required": true,
                "type":"string"
              }
          ],
          "responses": {
            "200": { "description": "Product retrived successfully" },
            "404": { "description": "Product not found" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/product/create": {
        "post": {
            "tags": [
                "Product"
              ],
          "summary": "Create a product",
          "parameters": [
            {
              "name": "name",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Name of the product"
            },
            {
              "name": "description",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Product description"
            },
            {
              "name": "category",
              "in": "formData",
              "required": true,
              "type": "string",
              "description": "Category ID (ObjectId reference)"
            },
            {
              "name": "price",
              "in": "formData",
              "required": true,
              "type": "number",
              "format": "float",
              "description": "Product price"
            },
            {
              "name": "imgUrl",
              "in": "formData",
              "required": true,
              "type": "file",
              "description": "Picture for the product"
            },
            {
              "name": "sizeVariations",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Comma-separated sizes (XS, S, M, L, XL, Custom)"
            },
            {
              "name": "colorVariations",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Comma-separated colors"
            },
            {
              "name": "materialDetails",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Comma-separated materials (e.g., Cotton, Silk)"
            },
            {
              "name": "culturalFeatures.styleType",
              "in": "formData",
              "required": false,
              "type": "string",
              "enum": ["Traditional", "Modern"],
              "description": "Style type"
            },
            {
              "name": "culturalFeatures.eventCategory",
              "in": "formData",
              "required": false,
              "type": "string",
              "enum": ["Casual", "Formal", "Wedding", "Ramadan"],
              "description": "Event category"
            },
            {
              "name": "sleeveAndDesign.sleeveType",
              "in": "formData",
              "required": false,
              "type": "string",
              "description": "Sleeve type (e.g., Full Sleeve, Short Sleeve)"
            },
            {
              "name": "sleeveAndDesign.embroidery",
              "in": "formData",
              "required": false,
              "type": "boolean",
              "description": "Has embroidery (true/false)"
            }
          ],
          "responses": {
            "200": { "description": "Product registered successfully" },
            "400": { "description": "Invalid data" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/products": {
    "get": {
      "tags": ["Product"],
      "summary": "Get all products",
      "description": "Fetches all products, including their category details.",
      "responses": {
        "200": { "description": "Products retrived!" },
        "404": { "description": "No data" },
        "500": { "description": "Internal server error" }
      }
        }
      },
      "/product/delete/{id}": {
    "delete": {
      "tags": ["Product"],
      "summary": "Delete a product",
      "description": "Deletes a product by its ID.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the product to delete",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        }
      ],
      "responses": {
        "200": { "description": "Product deleted successfully" },
        "404": { "description": "Product not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },
  "/product/update/{id}": {
    "put": {
      "tags": ["Product"],
      "summary": "Update a product",
      "description": "Updates the product details by its ID.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the product to update",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        },
        {
          "name": "name",
          "in": "formData",
          "required": false,
          "description": "New name of the product",
          "schema": {
            "type": "string",
            "example": "Updated Product Name"
          }
        },
        {
          "name": "description",
          "in": "formData",
          "required": false,
          "description": "New description of the product",
          "schema": {
            "type": "string",
            "example": "Updated product description"
          }
        },
        {
          "name": "category",
          "in": "formData",
          "required": false,
          "description": "ID of the category for the product",
          "schema": {
            "type": "string",
            "example": "60c72b2f9b1d4c3a7f6f98f1"
          }
        },
        {
          "name": "price",
          "in": "formData",
          "required": false,
          "description": "Price of the product",
          "schema": {
            "type": "number",
            "example": 99.99
          }
        },
        {
          "name": "imgUrl",
          "in": "formData",
          "required": false,
          "description": "Picture for the product",
            "type": "file"
        },
        {
          "name": "sizeVariations",
          "in": "formData",
          "required": false,
          "description": "Size variations for the product",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["XS", "S", "M", "L", "XL", "Custom"]
            },
            "example": ["S", "M", "L"]
          }
        },
        {
          "name": "customMeasurements",
          "in": "formData",
          "required": false,
          "description": "Custom measurements for the product",
          "schema": {
            "type": "object",
            "properties": {
              "length": {
                "type": "number",
                "example": 32
              },
              "width": {
                "type": "number",
                "example": 24
              },
              "otherDetails": {
                "type": "string",
                "example": "Custom measurements for a special order"
              }
            }
          }
        },
        {
          "name": "materialDetails",
          "in": "formData",
          "required": false,
          "description": "Material details for the product",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Cotton"
            }
          }
        },
        {
          "name": "sleeveAndDesign",
          "in": "formData",
          "required": false,
          "description": "Sleeve and design details for the product",
          "schema": {
            "type": "object",
            "properties": {
              "sleeveType": {
                "type": "string",
                "example": "Long sleeve"
              },
              "embroidery": {
                "type": "boolean",
                "example": true
              },
              "embellishments": {
                "type": "string",
                "example": "Beaded embroidery"
              }
            }
          }
        },
        {
          "name": "colorVariations",
          "in": "formData",
          "required": false,
          "description": "Color variations for the product",
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Red"
            }
          }
        },
        {
          "name": "culturalFeatures",
          "in": "formData",
          "required": false,
          "description": "Cultural features of the product",
          "schema": {
            "type": "object",
            "properties": {
              "styleType": {
                "type": "string",
                "enum": ["Traditional", "Modern"],
                "example": "Traditional"
              },
              "regionSpecificDesign": {
                "type": "string",
                "example": "African print"
              },
              "eventCategory": {
                "type": "string",
                "enum": ["Casual", "Formal", "Wedding", "Ramadan"],
                "example": "Wedding"
              }
            }
          }
        }
      ],
      "responses": {
        "200": { "description": "Product updated successfully" },
        "404": { "description": "Product not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/search": {
    "post": {
        "tags": [
            "Search"
          ],
      "summary": "Search products ",
      "parameters": [
        {
            "name": "query",
            "in": "formData",
            "required": true,
            "type":"string"
          }
      ],
      "responses": {
        "200": { "description": "Product retrived successfully" },
        "404": { "description": "Product not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/createStore": {
    "post": {
        "tags": [
            "Store"
          ],
      "summary": "Create store ",
      "parameters": [
        {
            "name": "name",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "categories",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },          
          {
            "name": "products",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "imgUrl",
            "in": "formData",
            "required": true,
            "type":"file"
          }
          
      ],
      "responses": {
        "201": { "description": "Store created successfully" },
        "500": { "description": "Internal server error" }
      }
    }
  },
"/getStoresByCategory/{id}": {
    "get": {
        "tags": [
            "Store"
          ],
      "summary": "Get all stores that has a specified category ",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the category",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        }
      ],
      "responses": {
        "201": { "description": "Stores retrived successfully" },
        "404": { "description": "Stores not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/getProductsInStore/{id}": {
    "get": {
        "tags": [
            "Store"
          ],
      "summary": "Get all products in a specified store ",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the store",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        }
      ],
      "responses": {
        "201": { "description": "Products retrived successfully" },
        "404": { "description": "Products not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },
  "/stores": {
    "get": {
        "tags": [
            "Store"
          ],
      "summary": "Get all stores ",
      "parameters": [
      ],
      "responses": {
        "201": { "description": "Stores retrived successfully" },
        "404": { "description": "Stores not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/getStoreById/{id}": {
    "get": {
        "tags": [
            "Store"
          ],
      "summary": "Get store by id",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the store",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        }
      ],
      "responses": {
        "201": { "description": "Store retrived successfully" },
        "404": { "description": "Store not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/updateStore/{id}": {
    "put": {
        "tags": [
            "Store"
          ],
      "summary": "Update store ",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the store",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        },
        {
            "name": "name",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "categories",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },          
          {
            "name": "products",
            "in": "formData",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "imgUrl",
            "in": "formData",
            "required": true,
            "type":"file"
          }
          
      ],
      "responses": {
        "201": { "description": "Store update successfully" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/deleteStore/{id}": {
    "delete": {
        "tags": [
            "Store"
          ],
      "summary": "Delete store by id",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the store",
          "schema": {
            "type": "string",
            "example": "660f29bdfc13ae1a8f0001a9"
          }
        }
      ],
      "responses": {
        "201": { "description": "Store deleted successfully" },
        "404": { "description": "Store not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/user/createMeasurements": {
    "post": {
        "tags": [
            "Measurements"
          ],
      "summary": "Get measurements ",
      "parameters": [
        {
            "name": "name",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "gender",
            "in": "formData",
            "required": true,
            "type":"string",
            "enum":["male","female"]
          },
          {
            "name": "height (in cm)",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "weight (in kg)",
            "in": "formData",
            "required": true,
            "type":"string"
          },
          {
            "name": "front_image",
            "in": "formData",
            "required": true,
            "type":"file"
          },
          {
            "name": "side_image",
            "in": "formData",
            "required": true,
            "type":"file"
          }
      ],
      "responses": {
        "200": { "description": "Measurement created successfully" },
        "500": { "description": "Internal server error" }
      }
    }
  },


  "/user/getMeasurement": {
    "get": {
        "tags": [
            "Measurements"
          ],
      "summary": "Get measurements for one person",
      "parameters": [
      ],
      "responses": {
        "200": { "description": "Measurements retrived successfully" },
        "404": { "description": "Measurements not found" },
        "500": { "description": "Internal server error" }
      }
    }
  },

  "/user/virtualTryon": {
    "post": {
        "tags": [
            "Virtual TryOn"
          ],
      "summary": "Try on different clothes!",
      "parameters": [
        {
          "name": "humanImage",
          "in": "formData",
          "required": true,
          "description": "The picture of yourself",
            "type": "file"
        },
        {
          "name": "clothId",
          "in": "formData",
          "required": true,
          "description": "The id for the product you want to tryon",
            "type": "string"
        }
      ],
      "responses": {
        "200": { "description": "Virtual tryon done successfully" },
        "500": { "description": "Internal server error" }
      }
    }
  },

"/category/create": {
  "post": {
    "tags": ["Category"],
    "summary": "Create a new category",
    "description": "Creates a new category with an image and a name.",
    "parameters": [
      {
        "name": "name",
        "in": "formData",
        "required": true,
        "description": "The name of the category",
        "schema": {
          "type": "string",
          "example": "Electronics"
        }
      },
      {
        "name": "imgUrl",
        "in": "formData",
        "required": true,
        "description": "The image for the category",
          "type": "file"
      }
    ],"responses": {
  "200": { "description": "Category created successfully" },
  "400": { "description": "Category already exists" },
  "500": { "description": "Internal server error" }
}
  }
},
"/categories": {
  "get": {
    "tags": ["Category"],
    "summary": "Get all categories",
    "description": "Fetches all categories from the database.",
    "parameters": [],
    "responses": {
      "200": {
        "description": "Categories retrieved successfully"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},
"/category/{id}": {
  "get": {
    "tags": ["Category"],
    "summary": "Get a category by ID",
    "description": "Fetches a category by its ID from the database.",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of the category to retrieve",
        "schema": {
          "type": "string",
          "example": "660f29bdfc13ae1a8f0001a9"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Category retrieved successfully"
      },
      "404": {
        "description": "Category not found"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},
"/category/update/{id}": {
  "put": {
    "tags": ["Category"],
    "summary": "Update a category by ID",
    "description": "Updates an existing category by its ID.",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of the category to update",
        "schema": {
          "type": "string",
          "example": "660f29bdfc13ae1a8f0001a9"
        }
      },
      {
        "name": "name",
        "in": "formData",
        "required": true,
        "description": "The name of the category",
        "schema": {
          "type": "string",
          "example": "Electronics"
        }
      },
      {
        "name": "imgUrl",
        "in": "formData",
        "required": true,
        "description": "The image for the category",
          "type": "file"
      }
    
    ],
   "responses": {
      "200": {
        "description": "Category retrieved successfully"
      },
      "404": {
        "description": "Category not found"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},

"/category/delete/{id}": {
  "delete": {
    "tags": ["Category"],
    "summary": "Delete a category by ID",
    "description": "Deletes an existing category by its ID.",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of the category to delete",
        "schema": {
          "type": "string",
          "example": "660f29bdfc13ae1a8f0001a9"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Category deleted successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Category deleted successfully"
                },
                "data": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Category not found"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
},

"/orders": {
  "post": {
    "summary": "Create an order",
    "description": "Creates an order from the user's cart.",
    "tags": ["Order"],

   "parameters":[],
    "responses": {
      "201": {
        "description": "Order created successfully",
        "content": { "application/json": { "example": { "message": "Order created successfully", "order": {} } } }
      },
      "200": {
        "description": "Cart is empty",
        "content": { "application/json": { "example": { "message": "Cart is empty!" } } }
      },
      "400": { "description": "Invalid request data", "content": { "application/json": { "example": { "error": "Invalid data provided" } } } },
      "404": { "description": "User or Product not found", "content": { "application/json": { "example": { "error": "User not found" } } } },
      "500": { "description": "Server error", "content": { "application/json": { "example": { "error": "Internal server error" } } } }
    }
  }
},

"/payments": {
      "post": {
        "summary": "Create a payment",
        "description": "Processes a payment for an order.",
        "tags": ["Payments"],
       "parameters": [
      {
        "name": "OrderId",
        "in": "formData",
        "required": true,
        "description": "The order ID",
          "type": "string"
      },
      {
        "name": "paymentMethodId",
        "in": "formData",
        "required": true,
        "description": "The payment method ID",
          "type": "string"
      }
    
    ],
        "responses": {
          "200": {
            "description": "Payment successful",
            "content": { "application/json": { "example": { "message": "Payment successful", "payment": {}, "order": {} } } }
          },
          "400": { "description": "Invalid request or payment failed", "content": { "application/json": { "example": { "error": "Payment failed" } } } },
          "404": { "description": "Order not found", "content": { "application/json": { "example": { "error": "Order not found" } } } },
          "500": { "description": "Server error", "content": { "application/json": { "example": { "error": "Payment processing failed" } } } }
        }
      }
    }

    }
  }
   